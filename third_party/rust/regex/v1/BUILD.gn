# Copyright 2023 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# @generated from third_party/rust/chromium_crates_io/BUILD.gn.hbs by
# tools/crates/gnrt.
# Do not edit!

import("//build/rust/cargo_crate.gni")

cargo_crate("lib") {
  crate_name = "regex"
  epoch = "1"
  crate_type = "rlib"
  crate_root = "crate/src/lib.rs"
  sources = [
    "crate/src/backtrack.rs",
    "crate/src/compile.rs",
    "crate/src/dfa.rs",
    "crate/src/error.rs",
    "crate/src/exec.rs",
    "crate/src/expand.rs",
    "crate/src/find_byte.rs",
    "crate/src/freqs.rs",
    "crate/src/input.rs",
    "crate/src/lib.rs",
    "crate/src/literal/imp.rs",
    "crate/src/literal/mod.rs",
    "crate/src/pattern.rs",
    "crate/src/pikevm.rs",
    "crate/src/pool.rs",
    "crate/src/prog.rs",
    "crate/src/re_builder.rs",
    "crate/src/re_bytes.rs",
    "crate/src/re_set.rs",
    "crate/src/re_trait.rs",
    "crate/src/re_unicode.rs",
    "crate/src/sparse.rs",
    "crate/src/utf8.rs",
  ]
  inputs = []

  build_native_rust_unit_tests = false
  edition = "2018"
  cargo_pkg_version = "1.6.0"
  cargo_pkg_authors = "The Rust Project Developers"
  cargo_pkg_name = "regex"
  cargo_pkg_description = "An implementation of regular expressions for Rust. This implementation uses finite automata and guarantees linear time matching on all inputs."
  library_configs -= [ "//build/config/compiler:chromium_code" ]
  library_configs += [ "//build/config/compiler:no_chromium_code" ]
  executable_configs -= [ "//build/config/compiler:chromium_code" ]
  executable_configs += [ "//build/config/compiler:no_chromium_code" ]
  deps = [
    "//brave/third_party/rust/aho_corasick/v0_7:lib",
    "//brave/third_party/rust/regex_syntax/v0_6:lib",
    "//third_party/rust/memchr/v2:lib",
  ]
  features = [
    "aho-corasick",
    "memchr",
    "perf",
    "perf-cache",
    "perf-dfa",
    "perf-inline",
    "perf-literal",
    "std",
    "unicode",
    "unicode-age",
    "unicode-bool",
    "unicode-case",
    "unicode-gencat",
    "unicode-perl",
    "unicode-script",
    "unicode-segment",
  ]
}
